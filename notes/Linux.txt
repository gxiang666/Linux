centos6.8:
uname -r 							# 查看内核版本
wget url 							# 下载
crul http://127.0.0.1:8000/			# 访问网页
ip addr 							# 查看ip（ifconfig）
yum -y install vim
yum -y install net-tools
yum -y install tree
netstat -nltp
ps -ef | grep mysql
service mysqld start
service mysqld restart
service mysqld stop
chkconfig <service> on
chkconfig <service> off
service network restart
useradd -d /home/gaoxiang -g dev gx
id root 
userdel -r gx
mysql -uroot -h 39.96.39.7 -p
kill -9 PID
which python
command --help
groupadd 组名
groupdel 组名
ln -s 被链接的源文件 链接文件
find [路径] -name "*.py"
tree [目录名] -d：只显示目录
cp 源文件 目标文件
mv 源文件 目标文件
grep 搜索文本 文件名
more 文件名
date	查看系统时间
runlevel 查看系统的运行级别
ssh 用户名@ip
scp 用户名@ip:文件名或路径 用户名@ip:文件名或路径
执行 `ssh-keygen` 即可生成 SSH 钥匙，一路回车即可
执行 `ssh-copy-id -p port user@remote`，上传公钥到服务器，可以让远程服务器记住我们的公钥
`which` 命令可以查看执行命令所在位置
`>` 表示输出，会覆盖文件原有的内容
`>>` 表示追加，会将内容追加到已有文件的末尾
`|` 管道 
ifconfig						查看网卡配置信息
ifconfig | grep inet			查看网卡对应的 IP 地址
shutdown -r now					重新启动操作系统，其中 now 表示现在
shutdown now					立刻关机，其中 now 表示现在
shutdown +10					系统再过十分钟后自动关机
shutdown 20:25					系统在今天的 20:25 会关机
shutdown -c						取消之前指定的关机计划
ps aux							`process status` 查看进程的详细状况
top								动态显示运行中的进程并且排序
kill [-9] 进程代号				终止指定代号的进程，`-9` 表示强行终止
df -h							`disk free`	显示磁盘剩余空间	
du -h [目录名]					`disk usage` 显示目录下的文件大小
cat /etc/group					确认组信息
chgrp -R 组名 文件/目录名		递归修改文件/目录的所属组
useradd -m -g 组 新建用户名		添加新用户	-m	自动建立用户家目录	-g	指定用户所在的组，否则会建立一个和同名的组
passwd 用户名					设置用户密码，如果是普通用户，直接用 passwd 可以修改自己的账户密码
userdel -r 用户名				删除用户	-r	选项会自动删除用户家目录
usermod -g 组 用户名			修改用户的主组
usermod -G 组 用户名			修改用户的附加组
usermod -s /bin/bash 用户名		修改用户登录 Shell
chown 用户名 文件名|目录名		修改文件|目录的拥有者
chgrp -R 组名 文件名|目录名		递归修改文件|目录的组
chmod -R 755 文件名|目录名		递归修改文件权限
chmod +/-rwx 文件名|目录名		直接修改文件|目录的 读|写|执行 权限，但是不能精确到 拥有者|组|其他
man command
	操作键		功能
	空格键		显示手册页的下一屏
	Enter键		一次滚动手册页的一行	
	b键			回滚一屏	
	f键			前滚一屏	
	q键			退出	
	/word		搜索 **word** 字符串
压缩： gzip  2019_03_25_182426.sql 2019_03_25_182426.sql.gz
解压： gunzip 2019_03_25_182426.sql.gz
打包：tar -zcvf 2019_03_25_182426.tar.gz 2019_03_25_182426
解包：tar -zxvf 2019_03_25_182426.tar.gz 
mysql的备份数据库的指令:
	mysqldump -u${DB_USER} -p${DB_PWD} --host=$HOST $DATABASE > $BACKUP/$DATETIME/$DATATIME.sql
	mysqldump -u${DB_USER} -p${DB_PWD} --host=$HOST $DATABASE | gzip > $BACKUP/$DATETIME/$DATATIME.sql.gz
crond任务调度：
	crontab -e: 编辑crontab定时任务
	crontab -l: 查询crontab任务列表
	crontab -r: 终止所有crontab任务
查看服务：
	netstat -nltp | grep xxx  
	ss -tanlp
查看开放端口：	firewall-cmd --list-all
hostnamectl set-hostname xxx
systemctl stop firewalld.service

查看系统中文件的使用情况:df -h
查看当前目录下各个文件及目录占用空间大小:du -sh *
/home/gaoxiang/app/zookeeper-3.4.6/bin/zkServer.sh start
scp -r zookeeper-3.4.6/  hadoop107:/home/gaoxiang/app/   

后台运行java微服务
=======================================================================
	nohup java -jar test.jar > temp.txt &
	nohup java -jar hello-0.0.1-SNAPSHOT.jar >  temp.txt &

通过建立软连接变为全局
==========================================================================
	ln -s /usr/local/application/nodejs/bin/npm /usr/local/bin/
	ln -s /usr/local/application/nodejs/bin/node /usr/local/bin/


设置自启动服务
=============================================================================
	修改linux 启动脚本/etc/rc.d/rc 
	加入:/usr/local/nginx/sbin/nginx

本地域名映射
==============================================================================
sudo vim /etc/hosts
	127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
	::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
	192.168.209.101 hadoop101

固定IP
==============================================================================
sudo vim /etc/sysconfig/network-scripts/ifcfg-eth0
	DEVICE=eth0
	TYPE=Ethernet
	UUID=90a864b5-f94c-41e9-9e4d-ed9ea2a253e9
	ONBOOT=yes
	NM_CONTROLLED=yes
	BOOTPROTO=static					####
	HWADDR=00:0C:29:32:48:E2
	DEFROUTE=yes
	PEERDNS=yes
	PEERROUTES=yes
	IPV4_FAILURE_FATAL=yes
	IPV6INIT=no
	NAME="System eth0"
	LAST_CONNECT=1554125237				
	IPADDR=192.168.209.101				####
	GATEWAY=192.168.209.2				####
	DNS1=192.168.209.2					####

redis集群
=============================================================================
创建集群
/opt/redis-5.0.5/src/redis-cli --cluster create 39.96.39.7:7001 39.96.39.7:7002 39.96.39.7:7003 39.96.39.7:7004 39.96.39.7:7005 39.96.39.7:7006 --cluster-replicas 1

连接集群
/opt/redis-5.0.5/src/redis-cli -c -p 7001 --raw#-c表示连集群 --raw中文显示

关闭集群
/opt/redis-5.0.5/src/redis-cli -c -p 7001 shutdown
/opt/redis-5.0.5/src/redis-cli -c -p 7002 shutdown
/opt/redis-5.0.5/src/redis-cli -c -p 7003 shutdown
/opt/redis-5.0.5/src/redis-cli -c -p 7004 shutdown
/opt/redis-5.0.5/src/redis-cli -c -p 7005 shutdown
/opt/redis-5.0.5/src/redis-cli -c -p 7006 shutdown

/opt/redis-5.0.5/src/redis-server ./7001/redis.conf 
/opt/redis-5.0.5/src/redis-server ./7002/redis.conf 
/opt/redis-5.0.5/src/redis-server ./7003/redis.conf 
/opt/redis-5.0.5/src/redis-server ./7004/redis.conf 
/opt/redis-5.0.5/src/redis-server ./7005/redis.conf 
/opt/redis-5.0.5/src/redis-server ./7006/redis.conf 



Nginx
=======================================================================
http {
......
     upstream myserver{
           ip_hash;
           server 115.28.52.63:8080 weight=1;
           server 115.28.52.63:8180 weight=1;
       }
.....
      server{
          location / {
                         .........
 	         proxy_pass http://myserver;
                         proxy_connect_timeout 10;
           }
                  .........
        }
}



vim
==============================================================================
:%s/7001/7004/g#所有7001的字符串替换为7004

修改主机名
==============================================================================
sudo vim /etc/sysconfig/network
	NETWORKING=yes
	HOSTNAME=Hadoop101

ssh免密码登陆配置
===============================================================================
ssh-keygen.sh -t rsa
~/.ssh 
	id_ras   id_rsa.pub  known_hosts
ssh-copy-id  desthost(要免密登录的IP) 或scp +  cat >> 命令 

执行 `ssh-keygen` 即可生成 SSH 钥匙，一路回车即可
执行 `ssh-copy-id -p port user@remote`，上传公钥到服务器，可以让远程服务器记住我们的公钥

让普通用户具备sudo权限：
==============================================================================
切换到root： vim /etc/sudoers
	root    	ALL=(ALL) ALL
	gaoxiang  	ALL=(ALL)  All  (添加一行)

让Linux启动不要启动图形界面
============================================================================
sudo vim /etc/inittab
	将启动级别改为3：id：	id:3:initdefault:
启动图形界面：startx 		sudo init 5	


添加环境变量
===============================================================================
sudo vim /etc/profile
	export JAVA_HOME=/home/gaoxiang/app/jdk1.8.0_144
	export HADOOP_HOME=/home/gaoxiang/app/hadoop-2.7.2
	export HIVE_HOME=/home/gaoxiang/app/hive-0.12.0
	export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HIVE_HOME/bin
source /etc/profile


================================================================================
[] 条件判断，距离括号的左右必须有一个空格，if的关键字必须和空格有一个空格
 #!/bin/bash
 
if [ "100" = "100" ]
then
        echo "equal"
fi
================================================================= 
字符串比较 = 
大于 -gt (greater than) 
小于 -lt (less than) 
大于或等于 -ge (greater than or equal) 
等于 -eq(equal)
小于或等于 -le (less than or equal) 
不相等 -ne （not equal）
===================================================================
#!/bin/bash
#完成数据库的备份
BACKUP=/data/backup/db
DATETIME=$(date +%Y_%m_%d_%H%M%S)
#可以输出变量调试
#echo ${DATETIME}
echo "=========开始备份========"
echo "=========备份的路径是 $BACKUP/$DATATIME.tar.gz"
#主机
HOST=localhost
#用户名
DB_USER=root
#密码
DB_PWD=root
#备份的数据库名
DATABASE=trace
#创建备份的路径
#如果备份的路径文件夹存在，就使用，不存在就创建
[ ! -d "$BACKUP/$DATETIME" ] && mkdir -p "$BACKUP/$DATETIME"
#执行mysql的备份数据库的指令
mysqldump -u${DB_USER} -p${DB_PWD} --host=$HOST $DATABASE | gzip > $BACKUP/$DATETIME/$DATETIME.sql.gz
#打包备份文件
cd $BACKUP
tar -zcvf $DATETIME.tar.gz $DATETIME
#删除临时目录
rm -rf $BACKUP/$DATETIME
#删除10天前的备份文件
find $BACKUP -mtime +10 -name "*.tar.gz" exec rm -rf {} \;
echo "============备份文件成功"


centos7.3:
============================================================================
修改主机名：
	vim /etc/hostname ：
		gaoxiang

让普通用户具备sudo权限：
	切换到root： vim /etc/sudoers
	root    	ALL=(ALL) ALL
	gaoxiang  	ALL=(ALL)  All  (添加一行)

修改运行级别
	在终端中输入： init 3
	systemctl set-default multi-user.target

关闭开机自启动
	systemctl disable httpd.service
	systemctl stop httpd.service

固定ip
	sudo vim /etc/sysconfig/network-scripts/ifcfg-ens33
		TYPE=Ethernet
		PROXY_METHOD=none
		BROWSER_ONLY=no
		BOOTPROTO=static							###
		DEFROUTE=yes
		IPV4_FAILURE_FATAL=no
		IPV6INIT=yes
		IPV6_AUTOCONF=yes
		IPV6_DEFROUTE=yes
		IPV6_FAILURE_FATAL=no
		IPV6_ADDR_GEN_MODE=stable-privacy
		NAME=ens33
		UUID=6db4e986-dc32-4314-94c6-2030ffffd08f
		DEVICE=ens33
		ONBOOT=yes###
		IPADDR=192.168.209.101						###
		NETMASK=255.255.255.0						###
		GATEWAY=192.168.209.2						###
		DNS1=192.168.209.2							###


=====================================================================================
Mysql:
	rpm -qa | grep mysql								查询mysql是否安装
	rpm -e --nodeps  mysql-libs							卸载mysql相关
	rpm -ivh MySQL-server-5.5.54-1.linux2.6.x86_64.rpm	安装server
	rpm -ivh MySQL-client-5.5.54-1.linux2.6.x86_64.rpm	安装client
	/usr/bin/mysqladmin -u root  password '123123'		设置root密码
	ps -ef|grep mysql									查询mysql的安装目录
	service mysql start
	service mysql stop 
	修改字符集问题
		查看字符集
		show variables like 'character%'; 
		show variables like '%char%';
		5.5     cp /usr/share/mysql/my-huge.cnf /etc/my.cnf
		5.6		cp /usr/share/mysql/my-default.cnf /etc/my.cnf
		修改my.cnf文件：
			[client]
			default-character-set=utf8
			[mysqld]
			character_set_server=utf8
			character_set_client=utf8
			collation-server=utf8_general_ci
			[mysql]
			default-character-set=utf8
		修改已生成的库表字符集
			修改数据库的字符集
			mysql> alter database mydb character set 'utf8';
			修改数据表的字符集
			mysql> alter table mytbl convert to  character set 'utf8';
